[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "misars_pipeline_kedro"
readme = "README.md"
dynamic = ["dependencies", "version"]

[project.scripts]
model-deployment-test = "misars_pipeline_kedro.__main__:main"

[project.entry-points."kedro.hooks"]

[project.optional-dependencies]
docs = [
    "docutils<0.21",
    "sphinx>=5.3,<7.3",
    "sphinx_rtd_theme==2.0.0",
    "nbsphinx==0.8.1",
    "sphinx-autodoc-typehints==1.20.2",
    "sphinx_copybutton==0.5.2",
    "ipykernel>=5.3, <7.0",
    "Jinja2<3.2.0",
    "myst-parser>=1.0,<2.1"
]
dev = [
    "pytest-cov~=3.0",
    "pytest-mock>=1.7.1, <2.0",
    "pytest~=7.2",
    "ruff~=0.1.8"
]
cuda = [
    "nvidia-cuda-runtime-cu12",
    "tensorrt-cu12==10.5.0",
    "tensorrt-cu12_bindings==10.5.0",
    "tensorrt-cu12_libs==10.5.0",
    "torch==2.5.0"
]
cpu = [
    "torch==2.5.0"
]
default = [
    "api==0.0.7",
    "APScheduler==3.10.4",
    "huggingface_hub==0.25.1",
    "kedro==0.19.8",
    "kedro_viz==10.0.0",
    "kedro[jupyter]",
    "kedro-datasets>=3.0; python_version >= '3.9'",
    "kedro-datasets>=1.0; python_version < '3.9'",
    "notebook",
    "scikit-learn~=1.5.1; python_version >= '3.9'",
    "scikit-learn<=1.4.0,>=1.0; python_version < '3.9'",
    "onnx==1.15.0",
    "onnx_graphsurgeon==0.5.2",
    "onnxsim==0.4.36",
    "pytest==7.4.4",
    "pytest-cov",
    "Requests==2.32.3",
    "ultralytics==8.3.17",
    "ipython>=8.10",
    "jupyterlab>=3.0",
    "tensorrt==10.5.0"
]

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}
version = {attr = "misars_pipeline_kedro.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.kedro]
package_name = "misars_pipeline_kedro"
project_name = "misars_pipeline_kedro"
kedro_init_version = "0.19.8"
tools = ['Linting', 'Testing', 'Custom Logging', 'Documentation', 'Data Structure', 'Kedro Viz']
example_pipeline = "False"
source_dir = "src"

[tool.pytest.ini_options]
addopts = """
--cov-report term-missing \
--cov src/misars_pipeline_kedro -ra"""

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff]
line-length = 88
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore = ["E501"]  # Ruff format takes care of line-too-long

[tool.kedro_telemetry]
project_id = "04d10b2da94d47ab8f6239dba0c3e97b"